version: '3.8'

services:
  rental-backend:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5002:5000" 
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - rental-network
    environment:
      - NODE_ENV=development  # Untuk local dev
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/api/healthcheck || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: rent_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rental-network
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  rental-network:
    driver: bridge
